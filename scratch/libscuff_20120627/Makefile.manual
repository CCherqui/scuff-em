CPPFLAGS = $(DEBUG)
LDFLAGS = $(DEBUG)

SCUFFEM = /home/homer/work/scuff-em-installation
CPPFLAGS += -I$(SCUFFEM)/include/scuff-em
CXXFLAGS += -fopenmp

LDFLAGS += -L/home/homer/work/scuff-em/src/libs/libMDInterp/.libs
LDFLAGS += -L/home/homer/work/scuff-em/src/libs/libSGJC/.libs
LDFLAGS += -L/home/homer/work/scuff-em/src/libs/libTriInt/.libs
LDFLAGS += -L/home/homer/work/scuff-em/src/libs/libhrutil/.libs
LDFLAGS += -L/home/homer/work/scuff-em/src/libs/libhmat/.libs
LDFLAGS += -L/home/homer/work/scuff-em/src/libs/libMatProp/.libs
LDFLAGS += -L/home/homer/work/scuff-em/src/libs/libIncField/.libs
LDFLAGS += -L/home/homer/work/scuff-em/src/libs/libMatProp/cmatheval/.libs
LDFLAGS += -L/home/homer/codes/lib

HR_LIBS = -lIncField -lMatProp -lcmatheval -lMDInterp -lhmat -lTriInt -lSGJC -lhrutil

OTHER_LIBS = -lreadline -lhdf5_hl -lhdf5 -llapack -lblas -lgomp -lgfortran

LIBS = $(HR_LIBS) $(OTHER_LIBS)

F77 = gfortran

#################################################################
#################################################################
#################################################################

tComposite:	tComposite.o libscuff.a
		$(CXX) $(LDFLAGS) -o $@ $^ $(LIBS)

#################################################################
#################################################################
#################################################################
LS_OBJS= \
AddEdgePanelContributions.o \
AssembleBEMMatrix.o \
AssembleBEMMatrix_Composite.o \
AssembleRHSVector.o \
AssembleRHSVector_Composite.o \
AssessPanelPair.o \
CalcGC.o \
EdgeEdgeInteractions.o \
EdgePanelInteractions.o \
ExpandCurrentDistribution.o \
FieldGrid.o \
FIPPICache.o \
GetFields_Composite.o \
GTransformation.o \
InitEdgeList.o \
InitEdgeList_Composite.o \
Overlap.o \
PanelPanelInteractions.o \
PointInObject.o \
QDFIPPI.o \
QIFIPPICubature.o \
QIFIPPITaylorDuffy.o \
ReadComsolFile.o \
ReadGMSHFile.o \
ReadGMSHFile_Composite.o \
RWGComposite.o \
RWGGeometry.o \
RWGObject.o \
rwlock.o \
scuffMisc.o \
TaylorDuffy.o \
Visualize.o

libscuff.a:	$(LS_OBJS)
		ar r $@ $^

clean:
		rm *.o *.a

